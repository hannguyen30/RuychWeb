@using Newtonsoft.Json
@using RuychWeb.Models.DTO﻿
@using RuychWeb.Models.Vnpay
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Trang chủ";
    var json = TempData["PaymentResponse"] as string;
    var paymentResponse = string.IsNullOrEmpty(json) ? null : JsonConvert.DeserializeObject<PaymentResponseModel>(json);
    var successMessage = TempData["OrderSuccess"] as string;
    var paymentFailedMessage = TempData["PaymentFailed"] as string;
}

<div class="col-sm-3">
    @Html.Partial("_SideBar")
</div>
<style>
    .price-container {
        display: flex;
        justify-content: center; /* Center align horizontally */
        align-items: center; /* Align vertically */
        gap: 10px; /* Add spacing between the prices */
    }

    .sale-price {
        font-size: 1.5em; /* Adjust size as needed */
        margin: 0;
    }

    .original-price {
        text-decoration: line-through;
        color: black;
        font-size: 1.2em; /* Adjust size as needed */
        margin: 0;
    }

    p {
        margin: 10px 0 0 0;
    }

    .out-of-stock {
        position: relative; /* Để các phần tử trong nằm đúng vị trí */
        pointer-events: none; /* Ngừng các sự kiện hover */
        opacity: 0.5; /* Làm mờ sản phẩm hết hàng */
    }

    .out-of-stock-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(255, 0, 0, 0.8);
        color: #fff;
        padding: 8px 16px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 4px;
        z-index: 10;
    }

    .out-of-stock img {
        opacity: 0.4;
    }

    .out-of-stock {
        position: relative; /* Để các phần tử trong nằm đúng vị trí */
        pointer-events: none; /* Ngừng các sự kiện hover */
        opacity: 0.5; /* Làm mờ sản phẩm hết hàng */
    }
</style>
<div class="col-sm-9 padding-right">
    <h2 class="title text-center">SẢN PHẨM ĐẶC TRƯNG</h2>
    <div class="features_items">
        <!--features_items-->

    </div><!--features_items-->
    <div id="pagination">
        <ul class="pagination">
        </ul>
    </div>
</div>
@section Scripts {
    <style>
        .out-of-stock-label {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgba(255, 0, 0, 0.8);
            color: #fff;
            padding: 8px 16px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 4px;
            z-index: 10;
        }

        .out-of-stock img {
            opacity: 0.4;
        }

    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            loadProducts(1);
        });

        function loadProducts(page) {
            $.ajax({
                url: "/Home/GetList",
                type: "GET",
                data: { page: page },
                success: function (result) {
                    const featuresItems = $('.features_items');
                    featuresItems.empty();

                    result.data.forEach(function (item) {
                        let isOutOfStock = true;
                        let totalQuantity = 0;
                        if (item.colors && item.colors.length > 0) {
                            item.colors.forEach(color => {
                                if (color.sizes && color.sizes.length > 0) {
                                    color.sizes.forEach(size => {
                                        totalQuantity += size.quantity || 0;
                                    });
                                }
                            });
                        }

                        if (totalQuantity > 0) {
                            isOutOfStock = false;
                        }

                        const discount = item.saleDetails && item.saleDetails.length > 0 ? item.saleDetails[0].discount : 0;
                        let salePrice = 0;
                        if (discount > 0) {
                            if (discount < 100) {
                                salePrice = item.price - (item.price * discount / 100);
                            } else if (discount > 1000) {
                                salePrice = item.price - discount;
                            }
                        }

                        // Tao san pham HTML
                        const productHTML = `
                            <div class="col-sm-4">
                                <div class="product-image-wrapper">
                                    <div class="single-products">
                                        <div class="productinfo text-center position-relative ${isOutOfStock ? 'out-of-stock' : ''}">
                                            <img src="/images/Products/${item.thumbnail}" alt="${item.name}" width="100%" />
                                            ${isOutOfStock ? `<div class="out-of-stock-label">Hết hàng</div>` : ''}
                                            <p>${item.name}</p>
                                            ${salePrice > 0
                                                ? `<h2 class="sale-price">${salePrice.toLocaleString('vi', { style: 'currency', currency: 'VND' })}</h2>
                                                   <h4 class="original-price" style="text-decoration: line-through; color: black;">${item.price.toLocaleString('vi', { style: 'currency', currency: 'VND' })}</h4>`
                                                : (item.price === 0
                                                    ? `<h2>Chờ cập nhật giá</h2>`
                                                    : `<h2>${item.price.toLocaleString('vi', { style: 'currency', currency: 'VND' })}</h2>`
                                                  )
                                            }
                                        </div>
                                        <div class="product-overlay">
                                            <div class="overlay-content">
                                                ${!isOutOfStock
                                                    ? `<a href="/Product/Detail/${item.productId}" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Mua ngay!</a>`
                                                    : ''}
                                            </div>
                                        </div>
                                    </div>
                                    <div class="choose">
                                        <ul class="nav nav-pills nav-justified">
                                            <li><a href="#"><i class="fa fa-plus-square"></i>Thêm vào yêu thích</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>`;

                        featuresItems.append(productHTML);
                    });

                    // Sử dụng đúng tên hàm Pagination
                    Pagination(result.currentPage, result.totalPages);
                },
                error: function (xhr, status, error) {
                    console.error('Error loading products:', error);
                }
            });
        }




        function Pagination(currentPage, totalPages) {
            var paginationHtml = '<ul class="pagination">';
            if (totalPages > 1) {
                paginationHtml += '<li class="page-item ' + (currentPage === 1 ? 'disabled' : '') + '">';
                paginationHtml += '<a class="page-link" href="javascript:void(0);" ';
                paginationHtml += 'onclick="' + (currentPage !== 1 ? `loadProducts(${currentPage - 1})` : '') + '">Trước</a></li>';

                for (var i = 1; i <= totalPages; i++) {
                    paginationHtml += '<li class="page-item ' + (currentPage === i ? 'active' : '') + '">';
                    paginationHtml += '<a class="page-link" href="javascript:void(0);" ';
                    paginationHtml += `onclick="loadProducts(${i})">${i}</a></li>`;
                }

                paginationHtml += '<li class="page-item ' + (currentPage === totalPages ? 'disabled' : '') + '">';
                paginationHtml += '<a class="page-link" href="javascript:void(0);" ';
                paginationHtml += 'onclick="' + (currentPage !== totalPages ? `loadProducts(${currentPage + 1})` : '') + '">Sau</a></li>';
            }
            paginationHtml += '</ul>';

            $('#pagination').html(paginationHtml);
        }

        document.addEventListener("DOMContentLoaded", function () {
            var passwordChanged = '@TempData["PasswordChanged"]';
            if (passwordChanged && passwordChanged !== '') {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: passwordChanged,
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        });
         document.addEventListener("DOMContentLoaded", function () {
            var orderId = '@TempData["OrderId"]';

            if (orderId) {
                Swal.fire({
                    icon: 'success',
                    title: 'Đặt hàng thành công!',
                    html: `<strong>Mã đơn hàng: ${orderId}</strong>`,
                    confirmButtonText: 'Xem đơn hàng',
                    confirmButtonColor: '#3085d6'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/UserOrder/LookupOrder';
                    }
                });
            }

            var shouldClearCart = '@TempData["ClearCart"]' === 'True';
            if (shouldClearCart) {
                localStorage.removeItem("cart");
            }
        });
        @if (paymentResponse != null && paymentResponse.Success)
        {
            <text>
                                                                            Swal.fire({
                                                                                icon: 'success',
                                                                                title: 'Thanh toán thành công!',
                                                                                html: `<strong>Mã đơn hàng:</strong> @paymentResponse.OrderId<br>
                                                                                        <strong>Thông tin:</strong> @paymentResponse.OrderDescription<br>
                                                                                        <strong>Phương thức:</strong> @paymentResponse.PaymentMethod<br>
                                                                                        <strong>Mã giao dịch:</strong> @paymentResponse.TransactionId<br>
                                                                                        <strong>Mã thanh toán:</strong> @paymentResponse.PaymentId`,
                                                                                confirmButtonText: 'Xem đơn hàng'
                                                                            }).then((result) => {
                                                                                if (result.isConfirmed) {
                                                                                        localStorage.removeItem("cart");
                                                                                    window.location.href = '/UserOrder/LookupOrder';
                                                                                }
                                                                            });
            </text>
        }
        else if (paymentResponse != null && !paymentResponse.Success)
        {
            <text>
                                                                            Swal.fire({
                                                                                icon: 'error',
                                                                                title: 'Thanh toán thất bại!',
                                                                                text: '@Html.Raw(paymentFailedMessage)',
                                                                                confirmButtonText: 'Quay lại'
                                                                            }).then((result) => {
                                                                                if (result.isConfirmed) {
                                                                                    window.location.href = '/UserOrder/LocalCheckout';
                                                                                }
                                                                            });
            </text>
        }
    </script>
}
