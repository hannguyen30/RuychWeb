@using Newtonsoft.Json
@using RuychWeb.Models.Vnpay
@using RuychWeb.Models.ViewModels
@model OrderViewModel
<style>

    #slider {
        display: none;
    }

</style>
@{
    ViewData["Title"] = "Đặt hàng";
    var json = TempData["PaymentResponse"] as string;
    var paymentResponse = string.IsNullOrEmpty(json) ? null : JsonConvert.DeserializeObject<PaymentResponseModel>(json);
    decimal subtotal = 0;
    decimal discountTotal = 0;
    decimal shippingFee = 0; // Tùy vào logic tính phí ship

    foreach (var item in Model.OrderDetails)
    {
        decimal discountedPrice;

        if (item.Discount < 100)
        {
            // Giảm theo phần trăm
            discountedPrice = item.Price * (1 - (decimal)item.Discount / 100m);
        }
        else if (item.Discount >= 1000)
        {
            // Giảm trực tiếp theo số tiền
            discountedPrice = item.Price - (decimal)item.Discount;
        }
        else
        {
            // Không giảm
            discountedPrice = item.Price;
        }

        // Đảm bảo giá không bị âm
        discountedPrice = Math.Max(0, discountedPrice);

        subtotal += discountedPrice * item.Quantity;
        discountTotal += (item.Price - discountedPrice) * item.Quantity;
    }

    decimal total = subtotal + shippingFee;
}

@if (paymentResponse != null)
{
    <div class="payment-success-overlay">
        <div class="payment-success-modal">
            <div class="payment-icon">
                <i class="fa-solid fa-circle-check"></i>
            </div>
            <h2>Thanh toán thành công!</h2>
            <p><strong>OrderId:</strong> @paymentResponse.OrderId</p>
            <p><strong>Thông tin:</strong> @paymentResponse.OrderDescription</p>
            <p><strong>Phương thức:</strong> @paymentResponse.PaymentMethod</p>
            <p><strong>Mã giao dịch:</strong> @paymentResponse.TransactionId</p>
            <p><strong>Mã thanh toán:</strong> @paymentResponse.PaymentId</p>
            <a asp-controller="Account" asp-action="History" class="btn-go-history">Xem đơn hàng</a>
        </div>
    </div>
}

<div class="order-checkout-page">
    <div class="container">
        <form id="guestCheckoutForm" method="post" asp-controller="UserOrder" asp-action="CreateOrder">
            <div class="row">
                <!-- LEFT: Shipping Info -->
                <div class="col-md-8">
                    <h4>THÔNG TIN GIAO HÀNG</h4>
                    <div class="form-group">
                        <label for="Name">Họ Tên</label>
                        <input type="text" class="form-control" id="Name" name="Name" />
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Phone">Số điện thoại</label>
                        <input type="text" class="form-control" id="Phone" name="Phone" />
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Address">Địa chỉ</label>
                        <input type="text" class="form-control" id="Address" name="Address" />
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="City">Tỉnh/Thành Phố</label>
                        <select class="form-control" id="tinh" name="Tinh" required>
                            <option value="0">Chọn Tỉnh/Thành Phố</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Tinh, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="District">Quận/Huyện</label>
                        <select class="form-control" id="quan" name="Quan" required>
                            <option value="0">Chọn Quận/Huyện</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Quan, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Ward">Phường/Xã</label>
                        <select class="form-control" id="phuong" name="Phuong" required>
                            <option value="0">Chọn Phường/Xã</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Phuong, "", new { @class = "text-danger" })
                    </div>

                    <h4>PHƯƠNG THỨC THANH TOÁN</h4>
                    <select class="form-control" name="PaymentMethod" required>
                        <option value="COD">Thanh toán khi nhận hàng (COD)</option>
                        <option value="Online">Thanh toán trực tuyến</option>
                    </select>
                </div>

                <!-- RIGHT: Order Summary -->
                <div class="col-md-4">
                    <h4>ĐƠN HÀNG</h4>
                    <ul class="list-group mb-3">
                        @foreach (var item in Model.OrderDetails.Select((value, index) => new { value, index }))
                        {
                            <input type="hidden" name="OrderDetails[@item.index].ProductDetailId" value="@item.value.ProductDetailId" />
                            <input type="hidden" name="OrderDetails[@item.index].Quantity" value="@item.value.Quantity" />
                            <input type="hidden" name="OrderDetails[@item.index].Price" value="@item.value.Price" />
                            <input type="hidden" name="OrderDetails[@item.index].Discount" value="@item.value.Discount" />
                            <input type="hidden" name="OrderDetails[@item.index].ColorName" value="@item.value.ColorName" />
                            <input type="hidden" name="OrderDetails[@item.index].Size" value="@item.value.Size" />
                            <input type="hidden" name="OrderDetails[@item.index].ProductName" value="@item.value.ProductName" />

                            @* Tính toán giá sau giảm *@
                            decimal discountedPrice;

                            if (item.value.Discount < 100)
                            {
                                discountedPrice = item.value.Price * (1 - (decimal)item.value.Discount / 100.0m);
                            }
                            else if (item.value.Discount >= 1000)
                            {
                                discountedPrice = item.value.Price - (decimal)item.value.Discount;
                            }
                            else
                            {
                                discountedPrice = item.value.Price; // Không giảm giá
                            }

                            <li class="list-group-item">
                                <div>
                                    <strong>@item.value.ProductName - @item.value.ColorName</strong><br />
                                    <small>Size: @item.value.Size - SL: @item.value.Quantity</small>
                                </div>
                                <div style="color: #a94442; font-weight: bold; margin: 5px 0;">
                                    <span>@Math.Floor((decimal)discountedPrice).ToString("N0") VND</span>
                                    @if (item.value.Discount > 0)
                                    {
                                        <span style="text-decoration: line-through; color: gray; margin-left: 10px;">
                                            @item.value.Price.ToString("N0") VND
                                        </span>
                                    }
                                </div>
                            </li>
                        }

                    </ul>

                    <div class="mt-3">
                        <p>
                            <span>Đơn hàng:</span>
                            <span id="subtotal" data-value="@subtotal">@subtotal.ToString("N0") VND</span>
                        </p>
                        <p>
                            <span>Giảm:</span>
                            <span id="discount">@discountTotal.ToString("N0") VND</span>
                        </p>
                        <p>
                            <span>Phí vận chuyển:</span>
                            <span id="shippingFee">@shippingFee.ToString("N0") VND</span>
                        </p>
                        <h5>
                            <span>Tổng cộng:</span>
                            <span id="total">@total.ToString("N0") VND</span>
                            <input type="hidden" name="Total" value="@total" />
                        </h5>
                    </div>
                    <button type="submit" class="btn btn-warning mt-3">HOÀN TẤT ĐẶT HÀNG</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Load tỉnh thành
            $.ajax({
                url: 'https://esgoo.net/api-tinhthanh/1/0.htm',
                method: 'GET',
                success: function (data_tinh) {
                    if (data_tinh.error === 0) {
                        $.each(data_tinh.data, function (key_tinh, val_tinh) {
                            $("#tinh").append('<option value="' + val_tinh.id + '">' + val_tinh.full_name + '</option>');
                        });

                        // Khi chọn tỉnh
                        $("#tinh").change(function () {
                            var idtinh = $(this).val();
                            $.ajax({
                                url: 'https://esgoo.net/api-tinhthanh/2/' + idtinh + '.htm',
                                method: 'GET',
                                success: function (data_quan) {
                                    if (data_quan.error === 0) {
                                        $("#quan").html('<option value="0">Chọn Quận/Huyện</option>');
                                        $("#phuong").html('<option value="0">Chọn Phường/Xã</option>');
                                        $.each(data_quan.data, function (key_quan, val_quan) {
                                            $("#quan").append('<option value="' + val_quan.id + '">' + val_quan.full_name + '</option>');
                                        });

                                        // Khi chọn quận
                                        $("#quan").change(function () {
                                            var idquan = $(this).val();
                                            $.ajax({
                                                url: 'https://esgoo.net/api-tinhthanh/3/' + idquan + '.htm',
                                                method: 'GET',
                                                success: function (data_phuong) {
                                                    if (data_phuong.error === 0) {
                                                        $("#phuong").html('<option value="0">Chọn Phường/Xã</option>');
                                                        $.each(data_phuong.data, function (key_phuong, val_phuong) {
                                                            $("#phuong").append('<option value="' + val_phuong.id + '">' + val_phuong.full_name + '</option>');
                                                        });
                                                    }
                                                }
                                            });
                                        });
                                    }
                                }
                            });
                        });
                    }
                }
            });

            // Khi chọn phường thì lấy phí vận chuyển
            $("#phuong").change(function () {
                var city = $("#tinh option:selected").text();
                var district = $("#quan option:selected").text();
                var ward = $("#phuong option:selected").text();

                if (city !== "Chọn Tỉnh/Thành Phố" && district !== "Chọn Quận/Huyện" && ward !== "Chọn Phường/Xã") {
                    $.ajax({
                        type: "POST",
                        url: "/Admin/Shipping/GetShippingFee",
                        data: { city: city, district: district, ward: ward },
                        success: function (response) {
                            if (response.success) {
                                $("#shippingFee").text(response.shippingFee.toLocaleString() + " VND");

                                var subtotal = parseFloat($("#subtotal").data("value"));
                                var total = subtotal + response.shippingFee;

                                $("input[name='Total']").val(total); // ✅ cập nhật input hidden
                                $("#total").text(total.toLocaleString() + " VND");
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            console.error("Không thể tính phí vận chuyển");
                        }
                    });
                }
            });
        });
        document.addEventListener("DOMContentLoaded", function () {
                    var shouldClearCart = '@TempData["ClearCart"]' === 'True';

                    if (shouldClearCart) {
                        localStorage.removeItem("cart"); // hoặc key khác nếu bạn dùng key khác
                        console.log("Đã xóa giỏ hàng trong localStorage");

                        // Hiển thị thông báo (nếu cần)
                        Swal.fire({
                            icon: 'success',
                            title: 'Đặt hàng thành công!',
                            text: 'Giỏ hàng của bạn đã được xóa.',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                });

    </script>
    }
