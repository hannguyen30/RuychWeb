@using Newtonsoft.Json
@using RuychWeb.Models.Vnpay
@model RuychWeb.Models.ViewModels.OrderViewModel
@{
    var json = TempData["PaymentResponse"] as string;
    var paymentResponse = string.IsNullOrEmpty(json) ? null : JsonConvert.DeserializeObject<PaymentResponseModel>(json);
    ViewData["Title"] = "Đặt hàng";
}
<style>

    #slider {
        display: none;
    }

</style>
@if (paymentResponse != null)
{
    <div class="payment-success-overlay">
        <div class="payment-success-modal">
            <div class="payment-icon">
                <i class="fa-solid fa-circle-check"></i>
            </div>
            <h2>Thanh toán thành công!</h2>
            <p><strong>OrderId:</strong> @paymentResponse.OrderId</p>
            <p><strong>Thông tin:</strong> @paymentResponse.OrderDescription</p>
            <p><strong>Phương thức:</strong> @paymentResponse.PaymentMethod</p>
            <p><strong>Mã giao dịch:</strong> @paymentResponse.TransactionId</p>
            <p><strong>Mã thanh toán:</strong> @paymentResponse.PaymentId</p>
            <a asp-controller="Account" asp-action="History" class="btn-go-history">Xem đơn hàng</a>
        </div>
    </div>
}
@if (TempData["OrderSuccess"] != null)
{
    <div class="modal fade show" id="orderSuccessModal" tabindex="-1" style="display:block;" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-success shadow">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Đặt hàng thành công</h5>
                    <button type="button" class="btn-close" onclick="closeModal()" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    <p>@TempData["OrderSuccess"]</p>
                </div>
                <div class="modal-footer">
                    <a href="/Orders/History" class="btn btn-success">Xem đơn hàng</a>
                    <a href="/" class="btn btn-outline-success">Về trang chủ</a>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}
<div class="order-checkout-page">
    <div class="container">
        <form method="post" asp-controller="UserOrder" asp-action="PlaceOrder">
            <div class="row">
                <!-- LEFT: Shipping Info -->
                <div class="col-md-8">
                    <h4>THÔNG TIN GIAO HÀNG</h4>
                    <div class="form-group">
                        <label for="Name">Họ Tên</label>
                        <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" />
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="Phone">Số điện thoại</label>
                        <input type="text" class="form-control" id="Phone" name="Phone" value="@Model.Phone" />
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="Address">Địa chỉ</label>
                        <input type="text" class="form-control" id="Address" name="Address" value="@Model.Address" />
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        <label for="City">Tỉnh/Thành Phố</label>
                        <select class="form-control" id="tinh" name="Tinh" required>
                            <option value="0">Chọn Tỉnh/Thành Phố</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Tinh, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="District">Quận/Huyện</label>
                        <select class="form-control" id="quan" name="Quan" required>
                            <option value="0">Chọn Quận/Huyện</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Quan, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Ward">Phường/Xã</label>
                        <select class="form-control" id="phuong" name="Phuong" required>
                            <option value="0">Chọn Phường/Xã</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.Phuong, "", new { @class = "text-danger" })
                    </div>

                    <h4>PHƯƠNG THỨC THANH TOÁN</h4>
                    <select name="PaymentMethod">
                        <option value="COD">Thanh toán khi nhận hàng (COD)</option>
                        <option value="Online">Thanh toán trực tuyến</option>
                    </select>
                </div>

                <!-- RIGHT: Order Summary -->
                <div class="col-md-4">
                    <h4>ĐƠN HÀNG</h4>
                    <ul class="list-group mb-3">
                        @foreach (var item in Model.OrderDetails)
                        {
                            <input type="hidden" name="OrderDetails[@item.ProductDetailId].ProductDetailId" value="@item.ProductDetailId" />
                            <input type="hidden" name="OrderDetails[@item.ProductDetailId].Quantity" value="@item.Quantity" />
                            <input type="hidden" name="OrderDetails[@item.ProductDetailId].Price" value="@item.Price" />
                            <li class="list-group-item">
                                <div>
                                    <strong>@item.ProductName - @item.ColorName</strong><br />
                                    <small>Size: @item.Size - Số lượng: @item.Quantity</small>
                                </div>
                                <div style="color: #a94442; font-weight: bold; margin: 5px 0;">

                                    @{
                                        var price = item.Price;
                                        var discount1 = item.Discount;
                                        if (discount1 < 100 && discount1 > 0)
                                        {
                                            var discountedPrice = price - (price * discount1 / 100);
                                            <span> @Math.Floor((decimal)discountedPrice).ToString("N0") VND</span>
                                            <span style="text-decoration: line-through; color: gray; margin-left: 10px;">
                                                @price.ToString("N0") VND
                                            </span>
                                        }
                                        else if (discount1 > 1000)
                                        {
                                            var discountedPrice = price - discount1;
                                            <span> @((decimal)discountedPrice).ToString("N0") VND</span>
                                            <span style="text-decoration: line-through; color: gray; margin-left: 10px;">
                                                @price.ToString("N0") VND
                                            </span>
                                        }
                                        else
                                        {
                                            <span>@price.ToString("N0") VND</span>
                                        }
                                    }
                                </div>
                            </li>
                        }
                    </ul>

                    <div class="mt-3">

                        @{
                            // Calculate the subtotal (sum of discounted prices for all items)
                            var subtotal = Model.OrderDetails.Sum(item =>
                            {
                                var price = item.Price;
                                var discount = item.Discount;
                                decimal discountedPrice;

                                if (discount < 100) // Percentage discount
                                {
                                    discountedPrice = price - (price * (decimal)discount / 100);
                                }
                                else if (discount > 1000) // Fixed amount discount
                                {
                                    discountedPrice = price - (decimal)discount;
                                }
                                else // No discount
                                {
                                    discountedPrice = price;
                                }

                                // Ensure the discounted price is not negative
                                discountedPrice = Math.Max(discountedPrice, 0);

                                // Return the total for this item (discounted price * quantity)
                                return discountedPrice * item.Quantity;
                            });

                            // Calculate the total discount applied
                            var originalTotal = Model.OrderDetails.Sum(item => item.Price * item.Quantity);
                            var discount = originalTotal - subtotal;
                        }
                        <p><span>Đơn hàng:</span><span id="subtotal" data-value="@subtotal">@subtotal.ToString("N0") VND</span></p>
                        <p><span>Giảm:</span><span>-@discount.ToString("N0") VND</span></p>
                        <p><span>Phí vận chuyển:</span><span id="shippingFee">0 VND</span></p>

                        <h5><span>TỔNG CỘNG:</span><span id="total"> VND</span></h5>
                        <input type="hidden" name="Total" id="totalInput" />
                    </div>

                    <button type="submit" class="btn btn-warning mt-3">HOÀN TẤT ĐẶT HÀNG</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
            $(document).ready(function () {
                // Lấy danh sách tỉnh thành
                $.ajax({
                    url: 'https://esgoo.net/api-tinhthanh/1/0.htm',
                    method: 'GET',
                    success: function (data_tinh) {
                        if (data_tinh.error === 0) {
                            $.each(data_tinh.data, function (key_tinh, val_tinh) {
                                $("#tinh").append('<option value="' + val_tinh.id + '">' + val_tinh.full_name + '</option>');
                            });

                            // Khi người dùng chọn tỉnh/thành phố
                            $("#tinh").change(function () {
                                var idtinh = $(this).val();

                                // Lấy danh sách quận/huyện
                                $.ajax({
                                    url: 'https://esgoo.net/api-tinhthanh/2/' + idtinh + '.htm',
                                    method: 'GET',
                                    success: function (data_quan) {
                                        if (data_quan.error === 0) {
                                            $("#quan").html('<option value="0">Chọn Quận/Huyện</option>');
                                            $("#phuong").html('<option value="0">Chọn Phường/Xã</option>');

                                            $.each(data_quan.data, function (key_quan, val_quan) {
                                                $("#quan").append('<option value="' + val_quan.id + '">' + val_quan.full_name + '</option>');
                                            });

                                            // Khi người dùng chọn quận/huyện
                                            $("#quan").change(function () {
                                                var idquan = $(this).val();

                                                // Lấy danh sách phường/xã
                                                $.ajax({
                                                    url: 'https://esgoo.net/api-tinhthanh/3/' + idquan + '.htm',
                                                    method: 'GET',
                                                    success: function (data_phuong) {
                                                        if (data_phuong.error === 0) {
                                                            $("#phuong").html('<option value="0">Chọn Phường/Xã</option>');

                                                            $.each(data_phuong.data, function (key_phuong, val_phuong) {
                                                                $("#phuong").append('<option value="' + val_phuong.id + '">' + val_phuong.full_name + '</option>');
                                                            });
                                                        }
                                                    },
                                                    error: function () {
                                                        console.error("Lỗi khi lấy danh sách phường/xã.");
                                                    }
                                                });
                                            });
                                        }
                                    },
                                    error: function () {
                                        console.error("Lỗi khi lấy danh sách quận/huyện.");
                                    }
                                });
                            });
                        }
                    },
                    error: function () {
                        console.error("Lỗi khi lấy danh sách tỉnh/thành phố.");
                    }
                });

                // Xử lý sự kiện thêm vận chuyển


                // Fetch provinces, districts, and wards (already implemented)

                // When the user selects a ward, fetch the shipping fee
                $("#phuong").change(function () {
                var city = $("#tinh").find('option:selected').text();
                var district = $("#quan").find('option:selected').text();
                var ward = $("#phuong").find('option:selected').text();

                console.log("City:", city, "District:", district, "Ward:", ward);

                if (city !== "Chọn Tỉnh/Thành Phố" && district !== "Chọn Quận/Huyện" && ward !== "Chọn Phường/Xã") {
                    $.ajax({
                        type: "POST",
                        url: "/Admin/Shipping/GetShippingFee",
                        data: {
                            city: city,
                            district: district,
                            ward: ward
                        },
                        success: function (response) {
                            console.log("Response:", response); // Debug response
                            if (response.success) {
                                $("#shippingFee").text(response.shippingFee.toLocaleString() + " VND");

                                var subtotal = parseFloat($("#subtotal").data("value"));
                                var total = subtotal + response.shippingFee;
                                    $("#totalInput").val(total);
                                $("#total").text(total.toLocaleString() + " VND");
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            console.error("Error fetching shipping fee.");
                        }
                    });
                }
            });

        });
        function closeModal() {
            document.getElementById("orderSuccessModal").style.display = "none";
            document.querySelector(".modal-backdrop").remove();
        }


        setTimeout(closeModal, 5000); // tự động đóng sau 5s
            setTimeout(() => {
                // Làm mờ và ẩn modal
                const overlay = document.querySelector('.payment-success-overlay');
                if (overlay) {
                    overlay.style.transition = 'opacity 0.5s ease';
                    overlay.style.opacity = '0';
                    setTimeout(() => {
                        // Redirect sau khi ẩn hoàn toàn
                        window.location.href = '/Account/History';
                    }, 500); // chờ thêm chút để hiệu ứng fade-out chạy xong
                }
            }, 6000);

    </script>
}